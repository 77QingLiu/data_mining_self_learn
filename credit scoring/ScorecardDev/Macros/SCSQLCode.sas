/*******
  Credit Risk Scorecards: Development and Implementation using SAS
  (c)  Mamdouh Refaat
********/



/*******************************************************/
/* Macro SCSQLCode */
/*******************************************************/
%macro SCSQLCode(SCDS,BasePoints, BaseOdds, PDO, IntOpt,FileName);
/* writing the scorecard generated by the scorecard dataset to an output
  file FileName generating SQL SELECT statement 
  If The option IntOpt=1 then we convert the points to integer values
  otherwise they are left as numbers */

/* direct the output to the filename */

proc sort data=&SCDS;
by VarType VarName LL;
run;

data _null_;
set &SCDS nobs=nx;
by VarType VarName LL;
file "&FileName";
length cond $300.;

if _N_ =1 then do;
	put '/*********************************************/' ;
	put '/*********************************************/';
	put '/***** Automatically Generated Scorecard *****/';
	put '/*********************************************/';
	put '/**************     SELECT Statement      **************/';
	put;
	put '/* Scorecard Scale : */';
	put "/*  Odds of [ 1 : &BaseOdds ] at  [ &BasePoints ] Points ";
    put "     with PDO of [ &PDO ] */";
	put; 
	put '/*********************************************/';
	put '/*********************************************/';
	put ;

	put '/*********************************************/';
	put '/*********************************************/';
	put;
	put '/****  Modify this code at the end to by adding the name of the  */';
	put '/****  the new score variable and the table name where these fields */';
	put '/****  would reside at time of deployment */';
	put;
	put '/*********************************************/';
    put;
    put 'SELECT (';
end; 

/* print the dataset RulesDS */


%if &IntOpt=1 %then xPoints=int(Points);
%else xPoints=Points; ;

if VarName="_BasePoints_" then do;
	put '/*********************************************/';
	put "/* Base Points   */";
	put '/*********************************************/';
    put "   "  xPoints ;
end;
else do;
   if first.VarName then do;
	put '/*********************************************/';
	put "/* Variable : " VarName "    *****/";
	put '/*********************************************/';
	put '+ (CASE ';
                      end;

    /* The rule */
    if VarType=1 then  do;/* continuous */
	if first.VarName then  cond='   WHEN '||compress(VarName)||' <= ('||compress(UL) || ') THEN ('||xPoints||')'; 
	else if last.VarName then cond='   ELSE ('||xPoints||')';
    else cond='   WHEN '||compress(VarName)||' > ('|| compress(LL)||') AND '||compress(VarName)||' <= ('||compress(UL) || ') THEN ('||xPoints||')'; 
                       end; 
    else if VarType=2 then do ; /* nominal string */
	if first.varName then cond = '   WHEN '||compress(VarName)|| '==' || "'"||(compress(Category))||"' THEN ("||xPoints||')' ; 
	else                  cond = '   ELSE ('||xPoints||')' ; 
						  end;
	else do;/* nominal numeric */
	if first.varName then cond='   WHEN ' ||compress(VarName)|| '==' || compress(N_Category)|| 'THEN ('||xPoints||')'; 
	else                  cond='   ELSE (' ||xPoints||')'; 
	     end;

	put "      " cond;

	if last.VarName then put '  END)';

 end;

	 if _N_=Nx then do;
	        put '  )';
			put ' AS    MyScore'; 
			put ' FROM  MyTable;';  
			put;
			put '/* Modify the variable name and the table to match the data schema */';
			put;
	 end;
run;


%mend;

